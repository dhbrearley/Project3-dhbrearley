@model Fall2024_Assignment3_dhbrearley.Models.ActorDetailsView

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Actor Profile</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Actor.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.Gender)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Actor.Gender)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.Age)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Actor.Age)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.Link)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Actor.Link)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.Photo)
        </dt>
        <dd class = "col-sm-10">
            @if (Model.Actor.Photo != null && Model.Actor.Photo.Length > 0) {
                var base64Image = Convert.ToBase64String(Model.Actor.Photo);
                var imageDataUrl = $"data:image/png;base64,{base64Image}"; // Change "png" to the correct format if needed
                @Html.Raw($"<img src=\"{imageDataUrl}\" alt=\"Actor Photo\" style=\"max-width: 200px; max-height: 200px;\" />")
            }
            else {
                <span>No photo available.</span>
            }
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Actor.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
<h5>Movies</h5>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movies)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    <a asp-action="Edit" asp-controller="Movie" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-controller="Movie" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-controller="Movie" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<h5>Latest Tweets</h5>
<h6>Average Sentiment Score: @Model.SentimentAverage</h6>
<table class="table table-striped table-hover">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Username</th>
            <th scope="col">Tweet</th>
            <th scope="col">Sentiment Score</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Tweets.Count; i++)
        {
            <tr>
                <td>@Model.Tweets[i].Username</td>
                <td>@Model.Tweets[i].Text</td>
                <td>@Model.SentimentScores[i].ToString("F2")</td>
            </tr>
        }
    </tbody>
</table>
